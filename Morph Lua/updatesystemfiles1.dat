function m_run(olddata)  
  jsonarray = parser:stringToJSONArray(olddata:get(0)) 
  als = fh:readFromFile(context, 'systemfiles.dat')  
  toupdate = luajava.newInstance('java.util.ArrayList')  
  for i = 0, jsonarray:length() - 1 , 1 do  
    jsondata = jsonarray:getJSONObject(i) 
    strnameconv = jsondata:getString('name') 
    strversionconv = jsondata:getString('version')  
    k = 0  
    for j = 0, als:size() - 1 , 1 do  
      linesplited = utils:split(als:get(j), ';')  
      strnamestored = linesplited:get(0) 
      strversionstored = linesplited:get(1)   
      if strnameconv == strnamestored then  
        k = 1 
        if strversionconv ~= strversionstored then  
          toupdate:add(strnamestored)  
        end  
      end  
    end  
    if k == 0 then  
      toupdate:add(strnameconv)  
    end  
  end  
  if toupdate:size() > 0 then  
    updatesystemfiles2 = utils:join(fh:readFromFile(context, 'updatesystemfiles2.dat'), ' ')  
    olddata:remove(0)  
    sb =luajava.newInstance('java.lang.StringBuilder')  
    sb:append('bring=')  
    for j = 0, toupdate:size() - 1 , 1 do  
      sb:append(toupdate:get(j))  
      w = toupdate:size() - 1  
      if j ~=  w then  
        sb:append(',') 
      end  
    end  
    array_ = luajava.newInstance('java.util.ArrayList')  
    array_:add('https://tryxml.000webhostapp.com/morph-test/testing.php')  
    array_:add('act=bssf')  
    array_:add(sb:toString()) 
    utils:generteAsyncTask(context, updatesystemfiles2, olddata, array_)
  else  
    olddata:get(2):setVisibility(4) 
    olddata:get(3):setVisibility(0) 
end  
end