function m_run(olddata) 
      jsonarray = parser:stringToJSONArray(olddata:get(0)) 
      als = fh:readFromFile(context, 'userdata.dat') 
      arrls = fh:readFromFile(context, 'userapps.dat') 
      str = '' 
      arrsession = luajava.newInstance('java.util.ArrayList') 
      for i = 0, jsonarray:length() - 1, 1 do 
            jsondata = jsonarray:getJSONObject(i) 
            if i == 0 then 
                  arrls:add(jsondata:getString('name')) 
                  str = jsondata:getString('name') 
            end 
            als:add(jsondata:getString('name') .. ';' .. jsondata:getString('activityname') ..';' .. jsondata:getString('version') ..';' .. jsondata:getString('type')) 
            file = luajava.newInstance('java.util.ArrayList') 
            str = jsondata:getString('file') 
            file:add(str) 
            fh:saveFile(context, jsondata:getString('name') .. '.' .. jsondata:getString('activityname'), parser:parserArrayListObjectToArrayListString(file)) 
            arrsession:add(jsondata:getString('activityname') .. ';' .. jsondata:getString('name') .. '.' .. jsondata:getString('activityname')  .. ';' ..  jsondata:getString('type')) 
      end 
      context:openSession(str, parser:parserArrayListObjectToArrayListString(arrsession)) 
      fh:saveFile(context, 'userdata.dat', parser:parserArrayListObjectToArrayListString(als)) 
      fh:saveFile(context, 'userapps.dat', parser:parserArrayListObjectToArrayListString(arrls)) 
      olddata:get(2):setVisibility(4) 
      olddata:get(3):setVisibility(0) 
 end 